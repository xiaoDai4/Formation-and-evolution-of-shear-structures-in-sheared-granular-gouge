model new
model title 'Sheared Granular Gouge (make sample)'
program echo off
; Set parameters
define set_parameter

    save_name_make_sample_ = 'make_sample'
    domain_width_ = 4e-3 ; 4 mm
    domain_height_ = 4e-3   ; 4 mm       
    
    gouge_width_ =  domain_width_    ; 4 mm, the width of the area to generate balls
    gouge_height_ =  2.0e-3   ; 2 mm, the height of the area to generate balls
    
    ball_radius_min_ = 1e-5
    ball_radius_max_ = ball_radius_min_ * 1.5
    
    n_teeth_ = 8
    teeth_radius_ = domain_width_ / n_teeth_ / 2
    pebble_info_  = array.create(n_teeth_, 3)
    
    i_ = 1
    loop while i_ <= n_teeth_
        pebble_info_(i_, 1) = teeth_radius_
        pebble_info_(i_, 2) = teeth_radius_ * (i_ * 2 - 1)
        pebble_info_(i_, 3) = (domain_height_ - gouge_height_) / 2 + gouge_height_ + teeth_radius_
        
        ;io.out(pebble_info_(i_, 1))
        ;io.out(pebble_info_(i_, 2))
        ;io.out(pebble_info_(i_, 3))
        i_ = i_ + 1
    end_loop
    
    
end
@set_parameter

;program pause


; Set the domain extent
model domain extent 0 [domain_width_] 0 [domain_height_] condition periodic

; default model property
contact cmat default model linear method deform emod 1.0e9 kratio 0.0 
contact cmat default property dp_nratio 0.5 

; set random-number generator
model random 10003

; create the clump
clump create id 1 density 2500 calculate 0.01 &
             pebbles [n_teeth_] &
             [pebble_info_(1, 1)] [pebble_info_(1, 2)] [pebble_info_(1, 3)] &
             [pebble_info_(2, 1)] [pebble_info_(2, 2)] [pebble_info_(2, 3)] &
             [pebble_info_(3, 1)] [pebble_info_(3, 2)] [pebble_info_(3, 3)] &
             [pebble_info_(4, 1)] [pebble_info_(4, 2)] [pebble_info_(4, 3)] &
             [pebble_info_(5, 1)] [pebble_info_(5, 2)] [pebble_info_(5, 3)] &
             [pebble_info_(6, 1)] [pebble_info_(6, 2)] [pebble_info_(6, 3)] &
             [pebble_info_(7, 1)] [pebble_info_(7, 2)] [pebble_info_(7, 3)] &
             [pebble_info_(8, 1)] [pebble_info_(8, 2)] [pebble_info_(8, 3)] 
clump create id 2 density 2500 calculate 0.01 &
             pebbles [n_teeth_] &
             [pebble_info_(1, 1)] [pebble_info_(1, 2)] [pebble_info_(1, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(2, 1)] [pebble_info_(2, 2)] [pebble_info_(2, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(3, 1)] [pebble_info_(3, 2)] [pebble_info_(3, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(4, 1)] [pebble_info_(4, 2)] [pebble_info_(4, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(5, 1)] [pebble_info_(5, 2)] [pebble_info_(5, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(6, 1)] [pebble_info_(6, 2)] [pebble_info_(6, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(7, 1)] [pebble_info_(7, 2)] [pebble_info_(7, 3) - gouge_height_ - 2 * teeth_radius_] &
             [pebble_info_(8, 1)] [pebble_info_(8, 2)] [pebble_info_(8, 3) - gouge_height_ - 2 * teeth_radius_] 

clump fix spin 
clump fix velocity

; create balls
ball distribute porosity 0.1 radius [ball_radius_min_] [ball_radius_max_] box 0 [domain_width_] &
    [(domain_height_ - gouge_height_) / 2] [(domain_height_ - gouge_height_) / 2 + gouge_height_]
ball attribute density 2500 damp 0.7



; Calculate and calm the system
model cycle 1000 calm 10
; Solve the system to a target limit (here the average force ratio)
; Use density scaling to quickly reach equilibrium
model mechanical timestep scale
model solve ratio-average 1e-4
model mechanical timestep auto
model calm

; save the sample

model save [save_name_make_sample_] 
